---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: terraform-aws-kops-state-backend

# Tags of this project
tags:
  - aws
  - terraform
  - terraform-modules
  - kops-kubernetes
  - kops
  - kubernetes
  - route53
  - s3
  - bucket
  - dns-zone
  - provision
  - dns

# Categories of this project
categories:
  - terraform-modules/kops-kubernetes

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Canonical GitHub repo
github_repo: cloudposse/terraform-aws-kops-state-backend

# Badges to display
badges:
  - name: "Build Status"
    image: "https://travis-ci.org/cloudposse/terraform-aws-kops-state-backend.svg?branch=master"
    url: "https://travis-ci.org/cloudposse/terraform-aws-kops-state-backend"
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudposse/terraform-aws-kops-state-backend.svg"
    url: "https://github.com/cloudposse/terraform-aws-kops-state-backend/releases/latest"
  - name: "Slack Community"
    image: "https://slack.cloudposse.com/badge.svg"
    url: "https://slack.cloudposse.com"

related:
  - name: "terraform-aws-kops-metadata"
    description: "Terraform module to lookup resources within a Kops cluster for easier integration with Terraform"
    url: "https://github.com/cloudposse/terraform-aws-kops-metadata"
  - name: "terraform-aws-kops-ecr"
    description: "Terraform module to provision an ECR repository and grant users and kubernetes nodes access to it."
    url: "https://github.com/cloudposse/terraform-aws-kops-ecr"
  - name: "terraform-aws-kops-external-dns"
    description: "Terraform module to provision an IAM role for external-dns running in a Kops cluster, and attach an IAM policy to the role with permissions to modify Route53 record sets"
    url: "https://github.com/cloudposse/terraform-aws-kops-external-dns"
  - name: "terraform-aws-kops-vpc-peering"
    description: "Terraform module to create a peering connection between a backing services VPC and a VPC created by Kops"
    url: "https://github.com/cloudposse/terraform-aws-kops-vpc-peering"
  - name: "terraform-aws-kops-route53"
    description: "Terraform module to lookup the IAM role associated with `kops` masters, and attach an IAM policy to the role with permissions to modify Route53 record sets"
    url: "https://github.com/cloudposse/terraform-aws-kops-route53"
  - name: "terraform-aws-kops-vault-backend"
    description: "Terraform module to provision an S3 bucket for HashiCorp Vault secrets storage, and an IAM role and policy with permissions for Kops nodes to access the bucket"
    url: "https://github.com/cloudposse/terraform-aws-kops-vault-backend"
  - name: "terraform-aws-kops-chart-repo"
    description: "Terraform module to provision an S3 bucket for Helm chart repository, and an IAM role and policy with permissions for Kops nodes to access the bucket"
    url: "https://github.com/cloudposse/terraform-aws-kops-chart-repo"

# Short description of this project
description: |-
  Terraform module to provision dependencies for `kops` (config S3 bucket & DNS zone).

  The module supports the following:

  1. Forced server-side encryption at rest for the S3 bucket
  2. S3 bucket versioning to allow for `kops` state recovery in the case of accidental deletions or human errors


# How to use this project
usage: |-
  This example will create a DNS zone called `us-east-1.cloudxl.net` and delegate it from the parent zone `cloudxl.net` by setting `NS` and `SOA` records in the parent zone.

  It will also create an S3 bucket with the name `cp-prod-kops-state` for storing `kops` state.

  ```hcl
  module "kops" {
    source           = "git::https://github.com/cloudposse/terraform-aws-kops-state-backend.git?ref=master"
    namespace        = "eg"
    stage            = "prod"
    name             = "kops-state"
    cluster_name     = "us-east-1"
    parent_zone_name = "domain.com"
    zone_name        = "$${name}.$${parent_zone_name}"
    region           = "us-east-1"
  }
  ```
  
  <br/>

  To verify that the created `kops` DNS zone has been tagged correctly, run

  ```sh
  aws route53 list-tags-for-resources --resource-type hostedzone --resource-ids Z27EGVGENRTTZZ
  ```


  ```js
  {
  {
      "ResourceTagSets": [
          {
              "ResourceType": "hostedzone",
              "ResourceId": "Z27EGVGENRTTZZ",
              "Tags": [
                  {
                      "Key": "Cluster",
                      "Value": "us-east-1.domain.com"
                  },
                  {
                      "Key": "Stage",
                      "Value": "prod"
                  },
                  {
                      "Key": "Namespace",
                      "Value": "cp"
                  },
                  {
                      "Key": "Name",
                      "Value": "eg-prod-us-east-1"
                  }
              ]
          }
      ]
  }
  ```

screenshots:
  - name: "kops-state-backend"
    description: "Example of outputs from the module after running `terraform apply`"
    url: "images/kops-state-backend.png"

include:
  - "docs/targets.md"
  - "docs/terraform.md"

# Contributors to this project
contributors:
  - name: "Erik Osterman"
    github: "osterman"
  - name: "Andriy Knysh"
    github: "aknysh"
